main.go:13:7: `a` is unused (deadcode)
const a = 1
      ^
main.go:14:7: `b` is unused (deadcode)
const b = 2
      ^
main.go:16:5: `globalData` is unused (deadcode)
var globalData int //  GlobalVariables: Using global variables can lead to unpredictable behavior and hard-to-track bugs
    ^
main.go:43:18: Error return value of `file.Close` is not checked (errcheck)
	defer file.Close() // Fix for NonClosedFile
	                ^
main.go:33:3: use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$` (forbidigo)
		fmt.Println("Too many parameters")
		^
main.go:40:3: use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$` (forbidigo)
		fmt.Println(err) // WrongLogging: Should use a logging package instead of fmt for errors
		^
main.go:46:2: use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$` (forbidigo)
	fmt.Println("File content:", string(content))
	^
main.go:51:2: use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$` (forbidigo)
	fmt.Println("Random number:", rnd.Intn(100))
	^
main.go:55:3: use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$` (forbidigo)
		fmt.Println("Asynchronous operation")
		^
main.go:61:3: use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$` (forbidigo)
		fmt.Println("ID is high")
		^
main.go:63:3: use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$` (forbidigo)
		fmt.Println("ID is normal")
		^
main.go:81:3: use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$` (forbidigo)
		fmt.Println("Name is empty")
		^
main.go:83:3: use of `fmt.Println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$` (forbidigo)
		fmt.Println("Name is not empty")
		^
main.go:50:9: G404: Use of weak random number generator (math/rand instead of crypto/rand) (gosec)
	rnd := rand.New(src)
	       ^
main.go:93:18: unused-parameter: parameter 'p1' seems to be unused, consider removing or renaming it as _ (revive)
func doSomething(p1 int, p2 int, p3 string, p4 int, p5 string, p6 int, p7 string, p8 int) error {
                 ^
main.go:1:1: package-comments: should have a package comment (revive)
package main
^
main.go:57:2: block should not end with a whitespace (or comment) (wsl)
	}()
	^
main.go:98:8: data is missing in user (exhaustivestruct)
	u := &user{id: 1, nameStr: "John Doe"}
	      ^
main.go:75:23: mnd: Magic number: 10, in <argument> detected (gomnd)
	ch := make(chan int, 10)
	                     ^
main.go:87:27: mnd: Magic number: 2, in <argument> detected (gomnd)
	if err := doSomething(1, 2, "", 3, "", 4, "", 5); err != nil {
	                         ^
main.go:32:19: mnd: Magic number: 10, in <condition> detected (gomnd)
	if len(params) > 10 { // MagicNumbers: Avoid using magic numbers without explanation
	                 ^
main.go:60:12: mnd: Magic number: 100, in <condition> detected (gomnd)
	if u.id > 100 {
	          ^
main.go:34:3: return with no blank line before (nlreturn)
		return
		^
main.go:41:3: return with no blank line before (nlreturn)
		return
		^
main.go:5:2: SA1019: "io/ioutil" has been deprecated since Go 1.19: As of Go 1.16, the same functionality is now provided by package [io] or package [os], and those implementations should be preferred in new code. See the specific function documentation for details. (staticcheck)
	"io/ioutil" // Deprecated api: io/ioutil has been deprecated since Go 1.19
	^
main.go:71:15: SA4010: this result of append is never used, except maybe in other appends (staticcheck)
		dataSlice = append(dataSlice, i)
		            ^
main.go:31:18: parameter name 'u' is too short for the scope of its usage (varnamelen)
func processdata(u *user, params ...string) { // 7. LongParameterList: Functions should avoid long parameter lists
                 ^
